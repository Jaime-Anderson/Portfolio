/*
Colors used: 
White: #fff;
Primary Color (emerald green): #16463f
Secondary Color (pink): #be4652
Background Color (sand?): #faf7f5 
 */
:root {
	--primary-color: #16463f;
	--secondary-color: #be4652;
	--background-color: #faf7f5;
	--grid-background-color: #d3d3d3;
	--white-color: #FFF;
	--heading-weight: 700;
}
 
* {
	box-sizing: border-box;
}

body {
	font-family: 'Montserrat', sans-serif;
	font-weight: 400;
	font-size: 16px;
	line-height: 1.6;
	background-color: var(--background-color);
	color: var(--primary-color); 
 }
 
 h1 {
 	font-size: 30px;
 	font-weight: var(--heading-weight);
 }

 h2 {
 	font-size: 24px;
 	font-weight: var(--heading-weight);
 }

 h3 {
 	font-size:  18px;
 	font-weight: var(--heading-weight);
 }

 a {
 	color: var(--secondary-color);
 	text-decoration: none;
 }

a:visited {
	/* visited link */
	color: var(--secondary-color);
}

a:hover, a.focus {
	/* No underlining when hovering over a link */
	color: var(--primary-color);
}

a:active {
	/*selected link*/
	color: var(--primary-color);
}

 .button, button {
	/*overwrites browser defaults and resets the border*/
	border: none;
	display: inline-block;
	/* takes the font from the outer container */
	font-family: inherit;
	/* Styles the background color, font color, and text
	decoration (underline, etc.) of the button */
	background-color: var(--primary-color);
	color: var(--white-color);
	text-decoration: none;
	/* adds spacing to the button */
	padding: 10px;
	border-radius: 3px;
	/* Gives the button a bottom border with a width of 
	2px, a type of solid, and a color in RGBA format */
	border-bottom: 2px solid rgba(0, 0, 0, 0.3);
	transition-duration: 0.2s opacity;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
	/* lets the mouse appear as a hand when hovering over
	the button */
	cursor: pointer;
	/* reduces the opacity of the button to 80% */
	opacity: 0.8;
	color: var(--white-color);
}

.button:visited {
	color: var(--white-color);
}

.cv {
	text-align: center;
}

.navigation-list__item--active {
	text-decoration: underline;
}

.profile {
	max-width: 700px;
	margin: 0 auto;
}

.profile_portrait {
	float: left;
	width: 250px;
	margin: 40px;
	border-radius: 50%;
}

.page-footer {
	clear: both;
	display: flex;
	flex-direction: column;
	text-align: center;
}

.heading, .about-info, .contact-info{
	text-align: center;
}

.table {
	margin: 0 auto;
}

#contact-form {
	clear: both;
	display: flex;
	flex-direction: column;
	text-align: center;
	padding-right: 20%;
	padding-left: 20%;
}

.page-header {
	display: flex;
	width: 100%;
	padding: 10px;
}

.page-header__item {
	flex: 0 1 200px;
}

.page-header__item:last-child {
	flex-grow: 1;
	text-align: right;
}

.navigation-list {
	list-style-type: none;
}

.navigation-list li {
	display: inline-block;
	margin-left: 15px;
}

/* start grid fallback */
.grid__item {
	display: inline-block;
	width: 33%;
}
/* end grid fallback */

@supports (display: grid) {
	.grid {
		display: grid;
		/*grid-template-columns: 300px 300px 300px; 
		fractions are better than pixels - they are responsive*/
		grid-template-columns: 1fr 1fr 1fr;
		grid-gap: 20px;
		margin: 0;
	}

	.grid__item {
		background-color: var(--grid-background-color);
		width: auto;
		min-height: auto;
		margin: 0;
	}

	.grid__item:last-child {
		grid-column: 3 / 3;
		grid-row: 1 / 3;
	}
}

.logo {
	margin: 10px;
	height: 150px;
	border-radius: 50%;
}

@media all and (max-width: 500px) {
	.grid {
		grid-template-columns: 1fr;
	}
}

@media all and (min-width: 500px) and (max-width: 750px) {
	.grid {
		grid-template-columns: 1fr 1fr;
		grid-gap: 10px;
	}
}

@media all and (max-width: 750px) {
	.grid {
		grid-gap: 10px;
	}
	.grid__item:last-child {
		grid-column: auto / auto;
		grid-row: auto / auto;
	}
	h1 {
		font-size: 22pxs;
	}
}

.svg{
  width: 50%;
  height: 25%;
}

@keyframes color-change {
  0% {
    fill: #16463f;
  }
  50% {
    fill: #faf7f5;
  }
  100% {
    fill: #be4652;
  }
}

.wisp {
  animation: 20s color-change infinite alternate linear;
}

@keyframes translate {
  from {
    transform: translate(5px, 5px);
  }
  to {
    transform: translate(15px, 15px);
  }
}

.left-wind {
  animation: 3s translate infinite alternate linear;
}

.right-wind {
  animation: 3s translate infinite alternate linear;
}
